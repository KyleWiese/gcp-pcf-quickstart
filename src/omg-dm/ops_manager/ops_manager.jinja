{% set baseName = 'opsman-' + properties['zone'] + 'pcf-' + env['deployment'] %}
{% set imageName = 'opsman-' + properties['zone'] + 'pcf-' + env['deployment'] + '-img' %}
{% set serviceAccountName = 'opsman-pcf-' + env['deployment'] + '-sa' %}
{% set projectDomain = env['project'].split(':') | reverse | join('.') %}
{% set opsManName = baseName + '-instance' %}

resources:
- name: {{ imageName }}
  type: compute.v1.image
  properties:
    rawDisk:
      source: {{ properties['opsManagerImage'] }}

- name: serviceAccount
  type: iam.v1.serviceAccount
  properties:
    accountId: {{ serviceAccountName }}
    displayName: {{ serviceAccountName }}

- name: {{ baseName }}-director
  type: storage.v1.bucket

- name: {{ opsManName }}
  type: compute.v1.instance
  properties:
    description: Ops Manager
    machineType: projects/{{ env['project'] }}/zones/{{ properties['zone'] }}/machineTypes/n1-standard-2
    zone: {{ properties['zone'] }}
    tags:
      items:
      - internal
      - no-ip
    networkInterfaces:
    - subnetwork: {{ properties['subnetworkSelfLink'] }}
    disks:
      - type: PERSISTENT
        boot: true
        mode: READ_WRITE
        autoDelete: true
        deviceName: ops-man
        initializeParams:
          sourceImage: $(ref.{{ imageName }}.selfLink)
          diskType: projects/{{ env['project'] }}/zones/{{ properties['zone'] }}/diskTypes/pd-standard
          diskSizeGb: 50
    serviceAccounts:
      - email: $(ref.serviceAccount.email)
        scopes:
        - "https://www.googleapis.com/auth/cloud-platform"


outputs:
- name: opsManagerIp
  value: $(ref.{{ opsManName }}.networkInterfaces[0].networkIP)
- name: directorBucket
  value: $(ref.{{ baseName }}-director.name)
- name: serviceAccountEmail
  value: $(ref.serviceAccount.email)